{"version":3,"sources":["xueliwork/Input.js","xueliwork/List.js","xueliwork/TodoList.js","index.js"],"names":["Input","props","ref","this","refs","value","onChange","handleChange","type","onClick","addTodo","Component","List","renderTodos","done","todos","map","todo","idx","toggle","checked","dangerouslySetInnerHTML","__html","title","delTodo","tt","filter","item","length","TodoList","e","setState","inpValue","target","state","index","localStorage","setItem","JSON","stringify","newTodos","parse","input","focus","getItem","inp","ReactDOM","render","document","getElementById"],"mappings":"kLAwBeA,E,kDArBX,WAAYC,GAAO,uCACTA,G,qDAIN,OACI,6BACI,2BACIC,IAAKC,KAAKF,MAAMG,KAChBC,MAAOF,KAAKF,MAAMI,MAClBC,SAAUH,KAAKF,MAAMM,aACrBC,KAAK,SAGT,4BACIC,QAASN,KAAKF,MAAMS,SADxB,Y,GAfIC,aCuCLC,E,kDArCX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IAGVY,YAAY,SAACC,GACT,OAAO,EAAKb,MAAMc,MAAMC,KAAI,SAACC,EAAKC,GAC9B,GAAGJ,GAAMG,EAAKH,KACV,OACI,4BACI,2BACIL,QAAS,kBAAI,EAAKR,MAAMkB,OAAOD,IAC/BE,QAASN,EACTN,KAAK,aAET,0BAAMa,wBAAyB,CAACC,OAAOL,EAAKM,SAC5C,4BAAQd,QAAS,kBAAI,EAAKR,MAAMuB,QAAQN,KAAxC,eAfF,E,qDAuBd,IAAMO,EAAGtB,KAAKF,MAAMc,MAEpB,OACI,6BACI,iDAAQU,EAAGC,QAAO,SAAAC,GAAI,OAAGA,EAAKb,QAAMc,QACpC,4BAAKzB,KAAKU,aAAY,IAEtB,iDAAQY,EAAGC,QAAO,SAAAC,GAAI,OAAEA,EAAKb,QAAMc,QACnC,4BAAKzB,KAAKU,aAAY,S,GAhCnBF,aC0FJkB,E,kDAxFX,aAAc,IAAD,8BACT,gBAaJtB,aAAa,SAACuB,GACV,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAO5B,SAfxB,EAkBbK,QAAQ,WACqB,KAAtB,EAAKwB,MAAMF,WACV,EAAKD,SAAS,CACVhB,MAAM,CACF,CACIQ,MAAM,EAAKW,MAAMF,SACjBlB,MAAK,IAHR,mBAKF,EAAKoB,MAAMnB,UAMtB,EAAKmB,MAAMF,SAAS,KAhCX,EAmCbR,QAAQ,SAACN,GACL,EAAKa,SAAS,CACVhB,MAAM,EAAKmB,MAAMnB,MAAMW,QAAO,SAACC,EAAKQ,GAAN,OAAcA,GAAOjB,OACrD,WACEkB,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,EAAKL,MAAMnB,YAvClD,EA2CbI,OAAO,SAACgB,GACJ,IAAIK,EAASF,KAAKG,MAAMH,KAAKC,UAAU,EAAKL,MAAMnB,QAClDyB,EAASL,GAAOrB,MAAM0B,EAASL,GAAOrB,KACtC,EAAKiB,SAAS,CAAChB,MAAMyB,KA5CrB,EAAKN,MAAM,CACPF,SAAS,GACTjB,MAAM,CACF,CAACQ,MAAM,SAAST,MAAK,GACrB,CAACS,MAAM,SAAST,MAAK,GACrB,CAACS,MAAM,SAAST,MAAK,GACrB,CAACS,MAAM,SAAST,MAAK,GACrB,CAACS,MAAM,SAAST,MAAK,KATpB,E,gEAkDTX,KAAKuC,MAAMC,QACX,IAAI5B,EAAMqB,aAAaQ,QAAQ,SAM/B,OALG7B,GACCZ,KAAK4B,SAAS,CACVhB,MAAMuB,KAAKG,MAAM1B,MAGlB,I,2CAIPqB,aAAaC,QACT,QACAC,KAAKC,UAAUpC,KAAK+B,MAAMnB,U,+BAIzB,IAAD,SACmBZ,KAAK+B,MADxB,EACGnB,MADH,EACSiB,SAEb,OACI,6BACI,kBAAC,EAAD,CACI5B,KAAM,SAAAyC,GAAG,OAAE,EAAKH,MAAMG,GACtBnC,QAASP,KAAKO,QACdH,aAAcJ,KAAKI,aACnBF,MAAOF,KAAK+B,MAAMF,WAEtB,kBAAC,EAAD,CACIR,QAASrB,KAAKqB,QACdL,OAAShB,KAAKgB,OACdJ,MAAOZ,KAAK+B,MAAMnB,a,GAlFfJ,aCqBvBmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ec8a0f59.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass Input extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input\r\n                    ref={this.props.refs}\r\n                    value={this.props.value}\r\n                    onChange={this.props.handleChange}\r\n                    type=\"text\"\r\n                ></input>\r\n\r\n                <button \r\n                    onClick={this.props.addTodo}\r\n                >add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Input;","import React,{Component} from 'react';\r\nimport TodoList from './TodoList';\r\n\r\nclass List extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    renderTodos=(done)=>{\r\n        return this.props.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return(\r\n                    <li>\r\n                        <input\r\n                            onClick={()=>this.props.toggle(idx)}\r\n                            checked={done}\r\n                            type=\"checkbox\"\r\n                        ></input>\r\n                        <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                        <button onClick={()=>this.props.delTodo(idx)}>delete</button>\r\n                    </li>\r\n                );\r\n            }\r\n        }); \r\n    }\r\n\r\n    render(){\r\n        const tt=this.props.todos;\r\n\r\n        return(\r\n            <div>\r\n                <h1>未完成{tt.filter(item=>!item.done).length}</h1>\r\n                <ul>{this.renderTodos(false)}</ul>\r\n\r\n                <h1>已完成{tt.filter(item=>item.done).length}</h1>\r\n                <ul>{this.renderTodos(true)}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React,{Component} from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\nclass TodoList extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'111111',done:true},\r\n                {title:'222222',done:false},\r\n                {title:'333333',done:true},\r\n                {title:'444444',done:false},\r\n                {title:'555555',done:true},\r\n            ]\r\n        };\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n\r\n    addTodo=()=>{\r\n        if(this.state.inpValue!==''){\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false\r\n                    },\r\n                ...this.state.todos\r\n                ]\r\n            });\r\n        }else{\r\n            return;\r\n        }\r\n        this.state.inpValue='';//置空\r\n    }\r\n\r\n    delTodo=(idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx),\r\n        },()=>{\r\n            localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n        });\r\n    }\r\n\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done=!newTodos[index].done;//置反\r\n        this.setState({todos:newTodos});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.input.focus();\r\n        let todos=localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const {todos,inpValue}=this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Input \r\n                    refs={inp=>this.input=inp}\r\n                    addTodo={this.addTodo}\r\n                    handleChange={this.handleChange}\r\n                    value={this.state.inpValue}\r\n                />\r\n                <List \r\n                    delTodo={this.delTodo}\r\n                    toggle ={this.toggle}\r\n                    todos={this.state.todos}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","// //React中的为默认导出 Component的为命名导出\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// // import $ from 'jquery';\n// // console.log($);\n// // import Control from './components/Control';\n// // import Home from './pages/Home';\n// // import Demo01 from './pages/Demo01';\n// // import App from './pages/App';\n// //import Hoc,{Detail} from './pages/Hoc';\n// import Hook from './pages/Hook';\n// import Context from './pages/context';\n// console.log(Context);\n\n// 雪梨1：实现带有本地存储的todolist功能(类组件实现)：\n// 最外层的index.js里render(<TodoList />,xx)\n// anyList组件里包含Input和List两个组件\n// 输入框输入时不进行本地存储\n// 写完进行npm run build,将打包完的静态传到github，\n// 设置github pages，雪梨提交网页链接的和四个文件的代码\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './xueliwork/TodoList';\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n\n\n// ReactDOM.render(\n//   <TodoList value=\"123\">\n//     <Hook />\n//   </TodoList>,\n  \n//   document.getElementById('root')\n// );\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n\n// ReactDOM.render(\n//   <div />,\n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//   // <APP title='wb' id='dashagua'/>,\n//   <Demo/>,\n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n// }, 1000);\n\n// const Buttons=()=>{\n//   const btns=[1,2,3,4,5];\n//   return <div>\n//     {\n//       btns.map((item)=><button>{item}</button>)\n//     }\n//   </div>\n// }\n\n//react-dom\n  // let ReactDOM = {\n  //   render(eleobj,container){\n  //     const{type,props}=eleobj;\n  //     let ele = document.createElement(type);\n\n  //     for (const prop in props) {\n  //       if(prop =='children'){\n\n  //           if(typeof props.children=='string'){\n  //             const textNode = document.createTextNode(child);\n  //             ele.appendChild(textNode);\n  //             break;\n  //           }\n  //           props.children.forEach(child=>{\n  //             if(typeof props.children=='string'){\n  //               const textNode = document.createTextNode(child);\n  //               ele.appendChild(textNode);\n  //             }else{\n  //               ReactDOM.render(child,ele);\n  //             }\n  //           })\n  //       }else{\n  //         ele[prop] = props[prop];\n  //       }\n  //     }\n  //     container.appendChild(ele);\n  //   }\n  // }\n\n\n// setInterval(() => {\n//   let ele = <h1 id = \"title\" className='tit'><div>hello</div> react\n//   <div>hello js</div>\n//   <div>当前时间</div>\n//   {\n//     new Date().toLocaleString()\n//   }\n//   </h1>\n\n\n\n//组件声明(函数组件)\n//ui组件，木偶组件\n\n// function APP(props){\n//    const{ title,id} = props;\n//   return <div>\n//     <div>\n//       {/*  两种写法 */}\n//       {/* {props.title} */}\n//       {title}\n//     </div>\n//     <div>\n//       {/* world */}\n//       {id}\n//     </div>\n//   </div>\n// }\n\n// //智能组价（类组件）\n\n// class Demo extends React.Component{\n//   render(){\n//     return<div>\n//       <APP title=\"任意值\" id=\"app\"></APP>\n//     </div>\n//   }\n// }\n// class Demo extends React.Component{\n//   render(){\n//     return <div>\n//       <APP title=\"任意值\" id=\"app\"></APP>\n//       <APP title=\"任意值\" id=\"app\"></APP>\n//       <APP title=\"任意值\" id=\"app\"></APP>\n//       <APP title=\"任意值\" id=\"app\"></APP>\n//     </div>\n//   }\n// }\n"],"sourceRoot":""}